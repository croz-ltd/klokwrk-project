plugins {
  id "klokwrk-gradle-plugin-convention-module-base"
  id "org.barfuin.gradle.taskinfo"
  id "groovy"
  id "idea"
  id "org.kordamp.gradle.publishing"
}

java {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}

test {
  jvmArgs = ["-noverify", "-XX:TieredStopAtLevel=1"]
  useJUnitPlatform()
}

// When Groovy project contains Java files, and these Java files contain javadoc comments, javaparser-core needs to be added into groovydoc classpath (otherwise, groovydoc task might fail).
// Do note that javaparser-core is a dependency of groovy-groovydoc, and its version should be updated when Groovy version changes.
// Helpful documentation link: https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/GroovyRuntime.html
Closure<FileCollection> createGroovyDocGroovyClasspath = { Project project ->
  Dependency javaParserDependency = project.getDependencies().create("com.github.javaparser:javaparser-core:$javaparserCoreVersion")
  FileCollection javaParserDependencyFileCollection = project.getConfigurations().detachedConfiguration(javaParserDependency)

  FileCollection groovyClasspath = project.groovyRuntime.inferGroovyClasspath(configurations.runtimeClasspath) + javaParserDependencyFileCollection
  return groovyClasspath
}

// Sometimes groovydoc needs additional dependencies in its classpath. With configuration bellow project can configure additional groovydoc dependencies by using
// groovydocExtendedClasspath. For example:
//
//   dependencies {
//     ...
//     groovydocExtendedClasspath "org.apache.tomcat.embed:tomcat-embed-core"
//   }
configurations {
  groovydocExtendedClasspath.extendsFrom(runtimeClasspath)
}

groovydoc {
  groovyClasspath = createGroovyDocGroovyClasspath(project) + project.configurations.groovydocExtendedClasspath
}

config {
  info {
    setName(project.name)
    setDescription(project.description == rootProject.description ? project.name : project.description)
  }

  publishing {
    setPublications(["myLibrary"])
  }
}

publishing {
  publications {
    myLibrary(MavenPublication) {
      from components.java
    }
  }
}

// NOTE: This fixes IDEA configuration of Groovy projects and this is necessary for IDEA to recognize spring metadata files generated by Spring Boot annotation processing.
//       - https://youtrack.jetbrains.com/issue/IDEA-215137
//       - https://youtrack.jetbrains.com/issue/IDEA-211520
idea {
  module {
    inheritOutputDirs = false
    outputDir = file("build/classes/groovy/main")
    testOutputDir = file("build/classes/groovy/test")
  }
}

dependencies {
  codenarc platform(project(":klokwrk-platform-base"))

  codenarc "org.codenarc:CodeNarc"
  codenarc "org.codehaus.groovy:groovy"
  codenarc "org.codehaus.groovy:groovy-templates"
}
