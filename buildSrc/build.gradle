/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2020-2021 CROZ d.o.o, the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
  id "groovy-gradle-plugin"
}

repositories {
  mavenCentral()
  gradlePluginPortal()
}

// reuse versions from rootDir gradle.properties - start
Properties properties = new Properties()
rootDir.toPath().resolveSibling("gradle.properties").toFile().withInputStream { InputStream inputStream -> properties.load(inputStream) }
properties.each { key, val -> project.ext."$key" = val }
// reuse versions from rootDir gradle.properties - end

tasks.withType(Test).configureEach {
  setJvmArgs(["-noverify", "-XX:TieredStopAtLevel=1"])
  useJUnitPlatform()
}

gradlePlugin {
  plugins {
    testRetryDisablerPlugin { PluginDeclaration pluginDeclaration ->
      pluginDeclaration.setId("org.klokwrk.gradle.test-retry-disabler")
      pluginDeclaration.setImplementationClass("org.klokwrk.gradle.testretrydisabler.TestRetryDisablerPlugin")
    }
  }
}

dependencies {
  implementation "org.gradle:test-retry-gradle-plugin:$gradleTestRetryPluginVersion"
  implementation "org.kordamp.gradle:publishing-gradle-plugin:$gradleKordampPluginVersion"
  implementation "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"

  testImplementation("org.spockframework:spock-core:$spockBuildSrcVersion") {
    exclude group: "org.codehaus.groovy"
  }
}
