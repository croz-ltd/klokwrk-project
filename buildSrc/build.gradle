/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2020-2022 CROZ d.o.o, the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
  id "groovy-gradle-plugin"
}

repositories {
  mavenCentral()
  gradlePluginPortal()
  jcenter() // TODO dmurat: remove jcenter repository when issue described bellow is resolved.
}

// The problem with jcenter (https://status.gradle.com/incidents/9j9bx7nlwwf1) causes the build to fail as it cannot resolve the "org.ajoberstar.grgit:grgit-core:4.0.1" dependency. Gradle Portal
// tried to remedy temporal jcenter issues by redirecting requests to Maven Central. Unfortunately, the grgit-core:4.0.1 was published only on jcenter (grgit-core has been published on Maven Central
// since version 4.1.1), so the Gradle Portal's workaround does not work in this case.
//
// Therefore, we can either include jcenter() in the list of repositories or force an upgrade of the grgit-core version.
//
// The following commented configuration is alternative for using deprecated jcenter() repository above.

//configurations.all {
//  resolutionStrategy {
//    force "org.ajoberstar.grgit:grgit-core:4.1.1"
//  }
//}

// reuse versions from rootDir gradle.properties - start
Properties properties = new Properties()
rootDir.toPath().resolveSibling("gradle.properties").toFile().withInputStream { InputStream inputStream -> properties.load(inputStream) }
properties.each { key, val -> project.ext."$key" = val }
// reuse versions from rootDir gradle.properties - end

java {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test).configureEach {
  setJvmArgs(["-noverify", "-XX:TieredStopAtLevel=1"])
  useJUnitPlatform()
}

gradlePlugin {
  plugins {
    testRetryDisablerPlugin { PluginDeclaration pluginDeclaration ->
      pluginDeclaration.setId("org.klokwrk.gradle.test-retry-disabler")
      pluginDeclaration.setImplementationClass("org.klokwrk.gradle.testretrydisabler.TestRetryDisablerPlugin")
    }
  }
}

dependencies {
  implementation "fr.brouillard.oss.gradle:gradle-jgitver-plugin:$gradleJgitverPluginVersion"
  implementation "gradle.plugin.com.github.johnrengelman:shadow:$gradleShadowPluginVersion"
  implementation "io.micronaut.gradle:micronaut-gradle-plugin:$gradleMicronautPlugin"
  implementation "org.gradle:test-retry-gradle-plugin:$gradleTestRetryPluginVersion"
  implementation "org.kordamp.gradle:publishing-gradle-plugin:$gradleKordampPluginVersion"
  implementation "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"

  testImplementation "org.spockframework:spock-core:$gradleSpockLibraryVersion"
}
