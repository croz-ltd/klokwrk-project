/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2020-2022 CROZ d.o.o, the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
  id "klokwrk-gradle-plugin-convention-module-base"
  id "klokwrk-gradle-plugin-convention-module-groovy"
  id "klokwrk-gradle-plugin-convention-springboot-app"
  id "klokwrk-gradle-plugin-convention-test-integration"
}

dependencies {
  implementation platform(project(":klokwrk-platform-spring-boot"))
  testIntegrationImplementation platform("org.testcontainers:testcontainers-bom:$testContainersVersion")

  implementation project(":cargotracker-booking-domain-model-aggregate")
  implementation project(":cargotracker-booking-domain-model-command")
  implementation project(":cargotracker-booking-domain-model-event")
  implementation project(":cargotracker-booking-domain-model-service")
  implementation project(":cargotracker-booking-domain-model-value")
  implementation project(":cargotracker-booking-boundary-web")
  implementation project(":cargotracker-booking-out-customer")
  implementation project(":cargotracker-lib-axon-logging")
  implementation project(":cargotracker-lib-axon-cqrs")
  implementation project(":cargotracker-lib-boundary-api")
  implementation project(":cargotracker-lib-domain-model-command")
  implementation project(":cargotracker-lib-domain-model-event")
  implementation project(":cargotracker-lib-web")
  implementation project(":klokwrk-lib-jackson-springboot")
  implementation project(":klokwrk-lib-validation-constraint")
  implementation project(":klokwrk-lib-validation-springboot")
  implementation project(":klokwrk-lang-groovy")
  implementation project(":klokwrk-lang-groovy-contracts-match")
  implementation project(":klokwrk-lang-groovy-contracts-simple")

  implementation "io.opentracing.contrib:opentracing-spring-cloud-starter"
  implementation "javax.measure:unit-api"
  implementation "org.axonframework:axon-spring-boot-starter"
  implementation "org.axonframework.extensions.tracing:axon-tracing-spring-boot-starter"
  implementation "org.codehaus.groovy:groovy"
  implementation "org.codehaus.groovy:groovy-macro"
  implementation "org.hamcrest:hamcrest"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "org.springframework.boot:spring-boot-starter-validation"
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "tech.units:indriya"

  runtimeOnly "com.wavefront:wavefront-spring-boot-starter"

  testImplementation project(":klokwrk-lib-archunit")

  testImplementation "com.tngtech.archunit:archunit-junit5"
  testImplementation "org.axonframework:axon-test"
  testImplementation "org.spockframework:spock-core"

  testIntegrationImplementation project(":cargotracker-booking-commandside-test-support")

  testIntegrationImplementation testFixtures(project(":cargotracker-booking-boundary-web"))

  testIntegrationImplementation "org.springframework:spring-test"
  testIntegrationImplementation "org.springframework.boot:spring-boot-test"
  testIntegrationImplementation "org.testcontainers:testcontainers"

  testIntegrationRuntimeOnly "org.spockframework:spock-spring"
}
