# Main Continuous Integration workflow.
# Basic job steps (until and including "Test Component Report Publish") are run on all OSes and JDK versions. Subsequent steps are only for "ubuntu-latest" and JDK 17.

name: Continuous Integration

on:
  push:
    branches:
      - master
      - feature_*
  pull_request:
    branches:
      - master
      - feature_*

jobs:
  build:
    strategy:
      matrix:
        java: ["17"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} - JDK ${{ matrix.java }}

    steps:
      - name: Support long paths for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: git config --system core.longpaths true

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin    # We are using Eclipse Temurin here since it is available locally on GitHub runners (no need to download and install).
          java-version: ${{ matrix.java }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Assemble
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble testFixturesClasses testClasses testIntegrationClasses testComponentClasses --continue --exclude-task groovydoc --scan

      - name: Test Unit
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test --parallel --continue --scan

      - name: Test Unit Report
        if: ${{ always() }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: allTestUnitReports --scan

      - name: Test Unit Report Publish
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: aggregatedTestUnitReports_${{ matrix.os }}-JDK-${{ matrix.java }}
          path: build/reports/allTestUnitReports/*

      - name: Test Integration
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: testIntegration --parallel --continue --scan

      - name: Test Integration Report
        if: ${{ matrix.os == 'ubuntu-latest' && always() }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: allTestIntegrationReports --scan

      - name: Test Integration Report Publish
        if: ${{ matrix.os == 'ubuntu-latest' &&  always() }}
        uses: actions/upload-artifact@v3
        with:
          name: aggregatedTestIntegrationReports_${{ matrix.os }}-JDK-${{ matrix.java }}
          path: build/reports/allTestIntegrationReports/*

      - name: Test Component
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: testComponent --parallel --continue --scan

      - name: Test Component Report
        if: ${{ matrix.os == 'ubuntu-latest' && always() }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: allTestComponentReports --scan

      - name: Test Component Report Publish
        if: ${{ matrix.os == 'ubuntu-latest' &&  always() }}
        uses: actions/upload-artifact@v3
        with:
          name: aggregatedTestComponentReports_${{ matrix.os }}-JDK-${{ matrix.java }}
          path: build/reports/allTestComponentReports/*

      - name: CodeNarc
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.java == '17' }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: aggregateCodenarc --scan

      - name: Publish CodeNarc Report
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.java == '17' && always() }}
        uses: actions/upload-artifact@v3
        with:
          name: aggregatedCodeNarcReports_${{ matrix.os }}_JDK-${{ matrix.java }}
          path: build/reports/codenarc/*

      - name: JaCoCo Coverage Report
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.java == '17' }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: aggregateJacocoReport --scan

      - name: Publish JaCoCo Coverage Report
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.java == '17' }}
        uses: codecov/codecov-action@v3
        with:
          name: Aggregated JaCoCo Report
          files: build/reports/jacoco/aggregate/jacocoTestReport.xml

      - name: Groovydoc
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.java == '17' && github.ref == 'refs/heads/master' && github.event_name == 'push' }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: aggregateGroovydoc --scan

      - name: Publish Groovydoc on GitHub Pages
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.java == '17' && github.ref == 'refs/heads/master' && github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}
          folder: build/docs/aggregate-groovydoc
          target-folder: groovydoc
          clean: true
          single-commit: true
