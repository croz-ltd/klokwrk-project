spring.application.name = cargotracker-booking-queryside-rdbms-projection-app

server.port = 8082
server.servlet.context-path = /cargotracker-booking-queryside-rdbms-projection

axon.axonserver.servers = ${CARGOTRACKER_AXON_SERVER_HOSTNAME:localhost}:${CARGOTRACKER_AXON_SERVER_PORT_GRPC:8124}
axon.serializer.general = JACKSON

management.endpoints.web.base-path = /management
management.endpoints.web.exposure.include = *
management.endpoint.health.show-details = when_authorized
management.info.git.mode = simple

spring.datasource.url = jdbc:postgresql://${CARGOTRACKER_POSTGRES_HOSTNAME:localhost}:${CARGOTRACKER_POSTGRES_PORT:5432}/cargotracker_booking_query_database
spring.datasource.driverClassName = org.postgresql.Driver
spring.datasource.username = ${CARGOTRACKER_POSTGRES_USERNAME:cargotracker}
spring.datasource.password = ${CARGOTRACKER_POSTGRES_PASSWORD:cargotracker}
spring.datasource.hikari.auto-commit = false

# Needs to be disabled when using flyway. However, it is left in the comment if needed for quick prototyping during development.
#spring.jpa.hibernate.ddl-auto = create

spring.jpa.open-in-view = false
spring.jpa.properties.hibernate.dialect = org.klokwrk.lib.hibernate.dialect.PostgreSqlAxonDialect
# To prevent going to the database when non-nullable property is null and is marked only with @Column(nullable = false).
# https://www.baeldung.com/hibernate-notnull-vs-nullable#1-validation
spring.jpa.properties.hibernate.check_nullability = true
# Delays database connection acquisition. For this to work, auto-commit must be disabled on connection pool level.
# https://vladmihalcea.com/why-you-should-always-use-hibernate-connection-provider_disables_autocommit-for-resource-local-jpa-transactions/
spring.jpa.properties.hibernate.connection.provider_disables_autocommit = true

klokwrk.datasourceproxy.query-logger.filtering-out-regular-expression-list = ^update token_entry.*$

wavefront.application.name = klokwrk-project
wavefront.application.service = ctb-projection

# Template for turning-off Wavefront and Axon tracing. Uncomment it tracing is not desirable.
#management.metrics.export.wavefront.enabled = false
#axon.extension.tracing.enabled = false

logging.pattern.console = ${CONSOLE_LOG_PATTERN:%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID:-}){magenta} %clr([%100.100t]){faint} %clr(%-60.60logger{59}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}

# To see event handler executions in projectors.
logging.level.cargotracker.axon.event-handler-logging = DEBUG
logging.level.klokwrk.datasourceproxy.queryLogger = DEBUG
logging.level.klokwrk.datasourceproxy.slowQueryLogger = WARN
logging.level.org.axonframework.eventsourcing = DEBUG
