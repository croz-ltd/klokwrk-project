spring.application.name: cargotracker-booking-queryside-rdbms-projection-app

server.port: 8082
server.servlet.context-path: /cargotracker-booking-queryside-rdbms-projection-app

axon.axonserver.servers: ${CARGO_TRACKER_AXON_SERVER_HOSTNAME:localhost}:${CARGO_TRACKER_AXON_SERVER_PORT_GRPC:8124}
axon.serializer.general: JACKSON

management.endpoints.web.base-path: /management
management.endpoints.web.exposure.include: '*'
management.endpoint.health.show-details: when_authorized
management.info.git.mode: simple

spring.datasource.url: jdbc:postgresql://${CARGO_TRACKER_POSTGRES_HOSTNAME:localhost}:${CARGO_TRACKER_POSTGRES_PORT:5432}/cargo_tracker_query_database
spring.datasource.driverClassName: org.postgresql.Driver
spring.datasource.username: cargotracker
spring.datasource.password: cargotracker

spring.jpa.hibernate.ddl-auto: create
spring.jpa.open-in-view: false
spring.jpa.properties.hibernate.dialect: org.klokwrk.lib.hibernate.dialect.PostgreSqlAxonDialect

klokwrk.datasourceproxy.query-logger.filtering-out-regular-expression-list: >
  ^update token_entry.*$

wavefront.application.name: klokwrk-project
wavefront.application.service: ctb-projection

logging.pattern.console: "${CONSOLE_LOG_PATTERN:%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID:-}){magenta} %clr([%100.100t]){faint} %clr(%-60.60logger{59}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}"

logging.level.cargotracker.axon.event-handler-logging: DEBUG  # To see event handler executions in projectors.
logging.level.klokwrk.datasourceproxy.queryLogger: DEBUG
logging.level.klokwrk.datasourceproxy.slowQueryLogger: WARN
logging.level.org.axonframework.eventsourcing: DEBUG
