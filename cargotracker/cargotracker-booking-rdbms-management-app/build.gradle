apply plugin: "org.springframework.boot"

// https://docs.gradle.org/current/userguide/upgrading_version_6.html#publishing_spring_boot_applications
configurations {
  [apiElements, runtimeElements].each {
    it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
    it.outgoing.artifact(bootJar)
  }
}

springBoot {
  // Generates META-INF/build-info.properties, which contains (beside other things) version generated by jgitver gradle plugin. That version (and other data from build-info.properties) are than
  // available via BuildProperties bean at runtime.
  buildInfo {
    properties {
      // Update build time only when "assemble" task is in the graph (https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/html/#integrating-with-actuator-build-info).
      // Note that the build still is not reproducible with this change, but the execution of separate tasks after "assemble" will not update build time anymore. This way, we can, for example,
      // execute tests and JaCoCo report generation separately without JaCoCo triggering test execution again.
      gradle.taskGraph.whenReady { taskGraph ->
        if (!taskGraph.hasTask(":assemble")) {
          time = null
        }
      }
    }
  }
}

bootJar {
  layered {
    includeLayerTools = false
  }
}

bootBuildImage {
  enabled = true
  environment = ["BP_JVM_VERSION" : "11.*"]
  imageName = "klokwrkprj/${project.name}:${project.version}"
}

dependencies {
  implementation "org.codehaus.groovy:groovy"
  implementation "org.flywaydb:flyway-core"
  implementation "org.springframework.boot:spring-boot-starter"

  implementation "org.springframework.boot:spring-boot-starter-jdbc"
  runtimeOnly "org.postgresql:postgresql"
}
