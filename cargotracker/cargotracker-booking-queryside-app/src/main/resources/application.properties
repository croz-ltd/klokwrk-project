spring.application.name = cargotracker-booking-queryside-app

server.port = 8084
server.servlet.context-path = /cargotracker-booking-queryside

axon.axonserver.servers = ${CARGO_TRACKER_AXON_SERVER_HOSTNAME:localhost}:${CARGO_TRACKER_AXON_SERVER_PORT_GRPC:8124}
axon.serializer.general = JACKSON

management.endpoints.web.exposure.include = *

spring.datasource.url = jdbc:postgresql://${CARGO_TRACKER_POSTGRES_HOSTNAME:localhost}:${CARGO_TRACKER_POSTGRES_PORT:5432}/cargo_tracker_query_database
spring.datasource.driverClassName = org.postgresql.Driver
spring.datasource.username = cargotracker
spring.datasource.password = cargotracker
spring.datasource.hikari.auto-commit = false

spring.jpa.hibernate.ddl-auto = none
spring.jpa.open-in-view = false
spring.jpa.properties.hibernate.dialect = org.klokwrk.lib.hibernate.dialect.PostgreSqlAxonDialect
# Delays database connection acquisition. For this to work, auto-commit must be disabled on connection pool level.
# https://vladmihalcea.com/why-you-should-always-use-hibernate-connection-provider_disables_autocommit-for-resource-local-jpa-transactions/
spring.jpa.properties.hibernate.connection.provider_disables_autocommit = true

spring.messages.basename = messages,responseFormattingDefaultMessages

wavefront.application.name = klokwrk-project
wavefront.application.service = ctb-queryside

# TODO dmurat: update Wavefront turn-off template when issue is resolved: https://github.com/wavefrontHQ/wavefront-spring-boot/issues/57
# TODO dmurat: update Axon tracing turn-off template when issue is resolved: https://github.com/AxonFramework/extension-tracing/issues/53
# Template for turning-off Wavefront and Axon tracing. Uncomment it tracing is not desirable.
## suppress inspection "SpringBootApplicationProperties"
#spring.autoconfigure.exclude = \
#  com.wavefront.spring.actuate.WavefrontEndpointAutoConfiguration, \
#  com.wavefront.spring.autoconfigure.WavefrontAutoConfiguration, \
#  org.axonframework.extensions.tracing.autoconfig.TracingAutoConfiguration, \
#  org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontMetricsExportAutoConfiguration

logging.pattern.console = ${CONSOLE_LOG_PATTERN:%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID:-}){magenta} %clr([%100.100t]){faint} %clr(%-60.60logger{59}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}

# To see query handler executions.
logging.level.cargotracker.axon.query-handler-logging = DEBUG
logging.level.klokwrk.datasourceproxy.queryLogger = DEBUG
logging.level.klokwrk.datasourceproxy.slowQueryLogger = WARN
# To see original exception stacktrace (before remoting) thrown in axon query handlers.
logging.level.org.klokwrk.cargotracker.lib.axon.cqrs.messagehandler.QueryHandlerTrait = DEBUG
logging.level.org.axonframework.eventsourcing = DEBUG

#logging.level.org.springframework.orm = DEBUG
#logging.level.org.springframework.transaction = TRACE
#logging.level.org.postgresql = TRACE
