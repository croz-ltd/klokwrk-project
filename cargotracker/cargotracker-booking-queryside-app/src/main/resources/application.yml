spring.application.name: cargotracker-booking-queryside-app

server.port: 8084
server.servlet.context-path: /cargotracker-booking-queryside

axon.axonserver.servers: ${CARGO_TRACKER_AXON_SERVER_HOSTNAME:localhost}:${CARGO_TRACKER_AXON_SERVER_PORT_GRPC:8124}
axon.serializer.general: JACKSON

management.endpoints.web.exposure.include: "*"

spring.datasource.url: jdbc:postgresql://${CARGO_TRACKER_POSTGRES_HOSTNAME:localhost}:${CARGO_TRACKER_POSTGRES_PORT:5432}/cargo_tracker_query_database
spring.datasource.driverClassName: org.postgresql.Driver
spring.datasource.username: cargotracker
spring.datasource.password: cargotracker

spring.jpa.hibernate.ddl-auto: none
spring.jpa.properties.hibernate.dialect: org.klokwrk.lib.hibernate.dialect.PostgreSqlAxonDialect
spring.jpa.open-in-view: false

spring.messages.basename: messages,responseFormattingDefaultMessages

logging.pattern.console: "${CONSOLE_LOG_PATTERN:%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID:-}){magenta} %clr([%100.100t]){faint} %clr(%-60.60logger{59}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}"

logging.level.cargotracker.axon.query-handler-logging: DEBUG # To see query handler executions.
logging.level.cargotracker.data-source-proxy.queryLogger: DEBUG
logging.level.cargotracker.data-source-proxy.slowQueryLogger: WARN
logging.level.org.axonframework.eventsourcing: DEBUG
logging.level.net.croz.cargotracker.infrastructure.project.axon.cqrs.messagehandler.QueryHandlerTrait : DEBUG # To see original exception stacktrace (before remoting) thrown in axon query handlers.
